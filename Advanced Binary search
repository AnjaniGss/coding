#include <iostream>
#include <cmath>
using namespace std;
int l=-1,r=-1;
int binary_search(int A[], int key, int imin, int imax)
{
  // test if array is empty
  if (imax < imin)
    // set is empty, so return value showing not found
    return -1;
  else
    {
      
      int imid = (imin+imax)/2;
        //cout<<"mid is "<<imid<<"\n";

      if (A[imid] > key){
      
       // cout<<"in A[imid] > key \n";
        binary_search(A, key, imin, imid - 1);
        }
        
        
      else if (A[imid] < key){
       //cout<<"in A[imid] < key \n";
 
        binary_search(A, key, imid + 1, imax);
    }
      else{
      
       if(A[imid-1]!=key && A[imid+1]!=key){
           l=imid;
           r=imid;
           return 0;
       }
          if(A[imid-1]!=key ){
              l=imid;
              binary_search(A, key, imid + 1, imax);
              return 0;
          }
        if(A[imid+1]!=key){
            r=imid;
             binary_search(A, key, imin, imid - 1);
            return 0;
        }
        else{
                if(r<0)
                    binary_search(A, key, imid + 1, imax);
                if(l<0)
                     binary_search(A, key, imin, imid - 1);
            }
      }    
      
        return 0;
    }
}

int main(){
    int n,i,key;
    cin>>n;
    int A[n];
    for(i=0;i<n;i++){
        cin>>A[i];
    }
    cin>>key;
   int k= binary_search(A,key,0,n-1);
    if(l>-1 && r>-1)
        cout<<l<<" "<<r<<" "<<r-l+1;
    else
         cout<<l<<" "<<r<<" 0";
    return 0;
}
